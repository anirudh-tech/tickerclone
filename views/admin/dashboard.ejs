<%- include('../layouts/header')%>
 <%- include('../partials/admin-header')%>
 <div class="modal" id="salesReportModal" tabindex="-1" role="dialog" aria-labelledby="salesReportModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="salesReportModalLabel">Sales Report</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="salesReport" method="post" action="/admin/download-sales-report">
            <div class="form-group">
              <label for="startDate">Start Date:</label>
              <input type="date" name="startDate" class="form-control" id="startDate" required>
            </div>
            <div class="form-group">
              <label for="endDate">End Date:</label>
              <input type="date" name="endDate" class="form-control" id="endDate" required>
            </div>
            <div class="form-group">
                <label>File Format:</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="fileFormat" id="pdf" value="pdf" checked>
                    <label class="form-check-label" for="pdf">
                        PDF
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="fileFormat" id="excel" value="excel">
                    <label class="form-check-label" for="excel">
                        Excel
                    </label>
                </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" data-bs-dismiss="modal" class="btn btn-primary">Download</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  
<div class="header" style="margin-top: 80px">
  <h1>Admin Dashboard</h1>
</div>
<%- include('../partials/admin-canvas')%>
<div class="text-end">
    <button class="btn btn-outline-info me-2" data-bs-toggle="modal" data-bs-target="#salesReportModal">Sales Report</button>
</div>
<div class="container mt-4">
  <div class="row">
    <div class="col-lg-12">
        <div class="card mb-4" style="background: linear-gradient(to right, rgba(255,0,0,0), rgb(229, 255, 251));">
          <h2 class="card-header">Sales Analysis</h2>
          <div class="card-body">
            <div class="row">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="timeIntervalDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                      By Day
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="timeIntervalDropdown">
                      <li><a class="dropdown-item" id="byDayOption">By Day</a></li>
                      <li><a class="dropdown-item" id="byMonthOption">By Month</a></li>
                      <li><a class="dropdown-item" id="byYearOption">By Year</a></li>
                    </ul>
                  </div>
              <div class="col-lg-6">
                <canvas id="salesGraphAmount"></canvas>
              </div>
              <div class="col-lg-6">
                <canvas id="salesGraphCount"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      

    <div class="col-lg-12">
        <div class="card mb-4" style="background: linear-gradient(to right, rgba(255,0,0,0), rgb(196, 255, 245));">
            <h2 class="card-header">Latest Orders</h2>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Date</th>
                                <th>Total</th>
                                <th>Payment</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody id="latestOrdersTable">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12">
        <div class="card" style="background: linear-gradient(to right, rgba(255,0,0,0), rgb(196, 255, 245));">
            <h2 class="card-header">Best Sellers</h2>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Product Image</th>
                                <th>Product</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Status</th>
                                <th>Sold</th>
                            </tr>
                        </thead>
                        <tbody id="bestSellersTable">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
  </div>
</div>

<style>
  .header {
  background-color: style="background: linear-gradient(to right, rgba(255,0,0,0), rgb(229, 255, 251));";
  color: #fff;
  padding: 20px;
  text-align: center;
  min-height: 80px; 
}

  .container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 20px;
  }

  .card {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    flex: 1;
  }

  .graph {
    margin-right: 0;
  }

  .table-responsive {
    overflow-x: auto;
  }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    updateSalesGraph("day");
document.getElementById("byDayOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Day";
    updateSalesGraph("day");
});

document.getElementById("byMonthOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Month";
    updateSalesGraph("month");
});

document.getElementById("byYearOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Year";
    updateSalesGraph("year");
});



async function fetchSalesData(timeInterval) {
    try {
        let response;
        if (timeInterval === "day") {
            console.log("daysss");
            response = await fetch("/admin/count-orders-by-day");
        } else if (timeInterval === "month") {
            console.log("monthsss");
            response = await fetch("/admin/count-orders-by-month");
        } else if (timeInterval === "year") {
            console.log("yearssss");
            response = await fetch("/admin/count-orders-by-year");
        } else {
            return false;
        }

        console.log("its response", response);

        if (!response.ok) {
            throw new Error("Network response was not ok");
        }

        const data = await response.json();
        return data;
    } catch (error) {
        console.error("Error fetching data:", error);
    }
}

  async function fetchOrdersAndSales() {
    try {
      const response = await fetch("/admin/latestOrders");
      if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        const data = await response.json();
        console.log("it is the response from orders", data.latestOrders);
      return data;
    } catch (error) {
      console.log("Error fetching data", error);
    }
  }

  async function updateSalesGraph(timeInterval) {
    const salesData = await fetchSalesData(timeInterval);
    console.log(salesData, "hereee");

    // Get the canvas element
    const Amount = document.getElementById("salesGraphAmount").getContext("2d");
    const Count = document.getElementById("salesGraphCount").getContext("2d");

    // If a chart already exists, destroy it
    if (window.myChart1) {
        window.myChart1.destroy();
    }
    if (window.myChart2) {
        window.myChart2.destroy();
    }
    const barColors = ["red", "green","blue","orange","brown"]

    window.myChart1 = new Chart(Amount, {
        type: "bar",
        data: {
            labels: salesData.labelsByCount,
            datasets: [
                {
                    label: "Sales",
                    data: salesData.dataByCount,
                    backgroundColor: "green",
                    borderColor: "rgba(0, 0, 0, 0)",
                    borderWidth: 3,
                },
            ],
        },
        options: {
            scales: {
                x: [{
                    grid: {
                        display: true
                    }
                }],
                y: [{
                    beginAtZero: true,
                    maxTicksLimit: 5
                }]
            }
        },
    });
    window.myChart2 = new Chart(Count, {
        type: "bar",
        data: {
            labels: salesData.labelsByAmount,
            datasets: [
                {
                    label: "Sales",
                    data: salesData.dataByAmount,
                    backgroundColor: "blue",
                    borderColor: "rgba(0, 0, 0, 0)",
                    borderWidth: 3,
                },
            ],
        },
        options: {
            scales: {
                x: [{
                    grid: {
                        display: true
                    }
                }],
                y: [{
                    beginAtZero: true,
                    maxTicksLimit: 5
                }]
            }
        },
    });
}

    // async function downloadSalesReport(){
    //     $.ajax({
    //         url : "/admin/download-sales-report",
    //         method : 'POST',
    //         data: $('#salesReport').serialize(),
    //         success : (response)=>{ 
    //             console.log("success got",success);
    //         }
    //     })
    // }


  async function updateLatestOrdersAndBestSellers() {
    const data = await fetchOrdersAndSales();
    const latestOrdersTable = document.getElementById("latestOrdersTable");
    const bestSellersTable = document.getElementById("bestSellersTable");
    const ordersData = data.latestOrders;
    const bestSellersData = data.bestSeller;

    ordersData.forEach((order) => {
        const row = latestOrdersTable.insertRow();
        const orderIdCell = row.insertCell(0);
        const dateCell = row.insertCell(1);
        const totalCell = row.insertCell(2);
        const paymentCell = row.insertCell(3);
        const statusCell = row.insertCell(4);

        orderIdCell.textContent = `ORD-${order._id}`;
        dateCell.textContent = order.OrderDate; 
        totalCell.textContent = order.TotalPrice; 
        paymentCell.textContent = order.PaymentMethod; 
        statusCell.textContent = order.PaymentStatus; 
        
    });

    bestSellersData.forEach((seller) => {
        const row = bestSellersTable.insertRow();
        const productImageCell = row.insertCell(0);
        const productCell = row.insertCell(1);
        const productNameCell = row.insertCell(2);
        const priceCell = row.insertCell(3);
        const statusCell = row.insertCell(4);
        const salesCell = row.insertCell(5);

        const imgElement = document.createElement("img");
        const imageUrl = "/uploads/" + seller.productDetails.images[0];
        imgElement.src = imageUrl;
        imgElement.style.maxWidth = "50px";
        productImageCell.appendChild(imgElement);

        productCell.textContent = seller.productDetails._id; 
        productNameCell.textContent = seller.productDetails.ProductName; 
        priceCell.textContent = seller.productDetails.Price; 
        statusCell.textContent = seller.productDetails.Status; 
        salesCell.textContent = seller.totalCount;
    });
}

updateSalesGraph();
updateLatestOrdersAndBestSellers();
</script>

<%- include('../layouts/footer') %>
